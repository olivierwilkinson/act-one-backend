### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO
8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The `JSON` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json

type Line {
  id: Int!
  lineRows(after: LineRowWhereUniqueInput, before: LineRowWhereUniqueInput, first: Int, last: Int): [LineRow!]!
  player: String!
  scene: Scene
  sceneId: Int
}

input LineData {
  lineRows: [LineRowData!]!
  player: String!
}

type LineRow {
  id: Int!
  line: Line
  lineId: Int
  number: Int
  text: String!
}

input LineRowData {
  number: Int
  text: String!
}

input LineRowWhereUniqueInput {
  id: Int
}

input LineWhereUniqueInput {
  id: Int
}

type Mutation {
  createPlay(play: PlayData!): Play
  deletePlay(id: Int!): Play
}

type Play {
  description: String!
  id: Int!
  image: String!
  imageLicenseCode: String!
  imageLicenseUrl: String!
  scenes(after: SceneWhereUniqueInput, before: SceneWhereUniqueInput, first: Int, last: Int): [Scene!]!
  title: String!
}

input PlayData {
  description: String!
  image: String!
  imageLicenseCode: String!
  imageLicenseUrl: String!
  scenes: [SceneData!]!
  title: String!
}

input PlayWhereUniqueInput {
  id: Int
}

type Query {
  play(where: PlayWhereUniqueInput!): Play
  plays(after: PlayWhereUniqueInput, before: PlayWhereUniqueInput, first: Int, last: Int): [Play!]!
  scene(where: SceneWhereUniqueInput!): Scene
  user: User
}

type Scene {
  actNum: Int!
  id: Int!
  lines(after: LineWhereUniqueInput, before: LineWhereUniqueInput, first: Int, last: Int): [Line!]!
  play: Play
  playId: Int
  sceneNum: Int!
}

input SceneData {
  actNum: Int!
  lines: [LineData!]!
  sceneNum: Int!
}

input SceneWhereUniqueInput {
  id: Int
}

type User {
  displayName: String
  email: String
  googleId: String
  id: ID
  name: String
  picture: String
}
